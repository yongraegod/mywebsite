{
  "hash": "184eda105a611820bf2cd8acb4d3f187",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"LS 빅데이터 스쿨 Homework 1\"\nauthor: \"yongraegod\"\ndate: \"2024-07-12\"\ncategories: [bigdata]\n---\n\n\n![](nongdamgom1.png)\n\n## 84 페이지\n\n###### Q1. 다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요.\n\n::: {#05e7fe79 .cell execution_count=1}\n``` {.python .cell-code}\n#!pip install pandas\nimport pandas as pd\n\ndf = pd.DataFrame({\"제품\"   : [\"사과\",\"딸기\",\"수박\"],\n                   \"가격\"   : [1800, 1500, 3000],\n                   \"판매량\" : [24, 38, 13]})\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>제품</th>\n      <th>가격</th>\n      <th>판매량</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>사과</td>\n      <td>1800</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>딸기</td>\n      <td>1500</td>\n      <td>38</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>수박</td>\n      <td>3000</td>\n      <td>13</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n</br>\n\n###### Q2. 앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.\n\n::: {#bf970151 .cell execution_count=2}\n``` {.python .cell-code}\nprice_avg = sum(df[\"가격\"]) / 3\nvol_avg = sum(df[\"판매량\"]) / 3\n\nprint(\"과일 가격의 평균은\", price_avg)\nprint(\"과일 판매량의 평균은\", vol_avg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n과일 가격의 평균은 2100.0\n과일 판매량의 평균은 25.0\n```\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## 115 페이지\n\n###### Q1. `mpg` 데이터를 불러와 복사본을 만드세요.\n\n::: {#43e44cad .cell execution_count=3}\n``` {.python .cell-code}\n# mpg 데이터 불러오기\nmpg_raw = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/mpg.csv')\nmpg_new = mpg_raw.copy()\nmpg_new\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n      <th>model</th>\n      <th>displ</th>\n      <th>year</th>\n      <th>cyl</th>\n      <th>trans</th>\n      <th>drv</th>\n      <th>cty</th>\n      <th>hwy</th>\n      <th>fl</th>\n      <th>category</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>18</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>f</td>\n      <td>20</td>\n      <td>31</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>auto(av)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>30</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.8</td>\n      <td>1999</td>\n      <td>6</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>16</td>\n      <td>26</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>229</th>\n      <td>volkswagen</td>\n      <td>passat</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>auto(s6)</td>\n      <td>f</td>\n      <td>19</td>\n      <td>28</td>\n      <td>p</td>\n      <td>midsize</td>\n    </tr>\n    <tr>\n      <th>230</th>\n      <td>volkswagen</td>\n      <td>passat</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>29</td>\n      <td>p</td>\n      <td>midsize</td>\n    </tr>\n    <tr>\n      <th>231</th>\n      <td>volkswagen</td>\n      <td>passat</td>\n      <td>2.8</td>\n      <td>1999</td>\n      <td>6</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>16</td>\n      <td>26</td>\n      <td>p</td>\n      <td>midsize</td>\n    </tr>\n    <tr>\n      <th>232</th>\n      <td>volkswagen</td>\n      <td>passat</td>\n      <td>2.8</td>\n      <td>1999</td>\n      <td>6</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>18</td>\n      <td>26</td>\n      <td>p</td>\n      <td>midsize</td>\n    </tr>\n    <tr>\n      <th>233</th>\n      <td>volkswagen</td>\n      <td>passat</td>\n      <td>3.6</td>\n      <td>2008</td>\n      <td>6</td>\n      <td>auto(s6)</td>\n      <td>f</td>\n      <td>17</td>\n      <td>26</td>\n      <td>p</td>\n      <td>midsize</td>\n    </tr>\n  </tbody>\n</table>\n<p>234 rows × 11 columns</p>\n</div>\n```\n:::\n:::\n\n\n</br>\n\n###### Q2. 복사본 데이터를 이용해 `cty`는 `city`로, `hwy`는 `highway`로 수정하세요.\n\n::: {#43d4d723 .cell execution_count=4}\n``` {.python .cell-code}\n#cty -> city\nmpg_new = mpg_new.rename(columns = {'cty' : 'city'})\n\n#hwy -> highway\nmpg_new = mpg_new.rename(columns = {'hwy' : 'highway'})\n```\n:::\n\n\n</br>\n\n###### Q3. 데이터 일부를 출력해 변수명이 바뀌었는지 확인해 보세요. 다음과 같은 결과물이 출력되어야 합니다.\n\n::: {#e0e10863 .cell execution_count=5}\n``` {.python .cell-code}\nmpg_new.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n      <th>model</th>\n      <th>displ</th>\n      <th>year</th>\n      <th>cyl</th>\n      <th>trans</th>\n      <th>drv</th>\n      <th>city</th>\n      <th>highway</th>\n      <th>fl</th>\n      <th>category</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>18</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>f</td>\n      <td>20</td>\n      <td>31</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>auto(av)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>30</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.8</td>\n      <td>1999</td>\n      <td>6</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>16</td>\n      <td>26</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## 130 페이지\n\n###### Q1. `midwest.csv`를 불러와 데이터의 특징을 파악하세요.\n\n::: {#1dc54dea .cell execution_count=6}\n``` {.python .cell-code}\n# midwest.csv 데이터 불러오기\nmidwest_raw = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/midwest.csv')\nmidwest_new = midwest_raw.copy()\nmidwest_new\n\nmidwest_new.head()\nmidwest_new.tail()\nmidwest_new.shape\nmidwest_new.info()\nmidwest_new.describe()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PID</th>\n      <th>area</th>\n      <th>poptotal</th>\n      <th>popdensity</th>\n      <th>popwhite</th>\n      <th>popblack</th>\n      <th>popamerindian</th>\n      <th>popasian</th>\n      <th>popother</th>\n      <th>percwhite</th>\n      <th>...</th>\n      <th>perchsd</th>\n      <th>percollege</th>\n      <th>percprof</th>\n      <th>poppovertyknown</th>\n      <th>percpovertyknown</th>\n      <th>percbelowpoverty</th>\n      <th>percchildbelowpovert</th>\n      <th>percadultpoverty</th>\n      <th>percelderlypoverty</th>\n      <th>inmetro</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>4.370000e+02</td>\n      <td>437.000000</td>\n      <td>4.370000e+02</td>\n      <td>4.370000e+02</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>...</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>4.370000e+02</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n      <td>437.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1437.338673</td>\n      <td>0.033169</td>\n      <td>9.613030e+04</td>\n      <td>3097.742985</td>\n      <td>8.183992e+04</td>\n      <td>1.102388e+04</td>\n      <td>343.109840</td>\n      <td>1310.464531</td>\n      <td>1612.931350</td>\n      <td>95.558441</td>\n      <td>...</td>\n      <td>73.965546</td>\n      <td>18.272736</td>\n      <td>4.447259</td>\n      <td>9.364228e+04</td>\n      <td>97.110267</td>\n      <td>12.510505</td>\n      <td>16.447464</td>\n      <td>10.918798</td>\n      <td>11.389043</td>\n      <td>0.343249</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>876.390266</td>\n      <td>0.014679</td>\n      <td>2.981705e+05</td>\n      <td>7664.751786</td>\n      <td>2.001966e+05</td>\n      <td>7.895827e+04</td>\n      <td>868.926751</td>\n      <td>9518.394189</td>\n      <td>18526.540699</td>\n      <td>7.087358</td>\n      <td>...</td>\n      <td>5.843177</td>\n      <td>6.261908</td>\n      <td>2.408427</td>\n      <td>2.932351e+05</td>\n      <td>2.749863</td>\n      <td>5.150155</td>\n      <td>7.228634</td>\n      <td>5.109166</td>\n      <td>3.661259</td>\n      <td>0.475338</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>561.000000</td>\n      <td>0.005000</td>\n      <td>1.701000e+03</td>\n      <td>85.050000</td>\n      <td>4.160000e+02</td>\n      <td>0.000000e+00</td>\n      <td>4.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>10.694087</td>\n      <td>...</td>\n      <td>46.912261</td>\n      <td>7.336108</td>\n      <td>0.520291</td>\n      <td>1.696000e+03</td>\n      <td>80.902441</td>\n      <td>2.180168</td>\n      <td>1.918955</td>\n      <td>1.938504</td>\n      <td>3.547067</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>670.000000</td>\n      <td>0.024000</td>\n      <td>1.884000e+04</td>\n      <td>622.407407</td>\n      <td>1.863000e+04</td>\n      <td>2.900000e+01</td>\n      <td>44.000000</td>\n      <td>35.000000</td>\n      <td>20.000000</td>\n      <td>94.886032</td>\n      <td>...</td>\n      <td>71.325329</td>\n      <td>14.113725</td>\n      <td>2.997957</td>\n      <td>1.836400e+04</td>\n      <td>96.894572</td>\n      <td>9.198715</td>\n      <td>11.624088</td>\n      <td>7.668009</td>\n      <td>8.911763</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1221.000000</td>\n      <td>0.030000</td>\n      <td>3.532400e+04</td>\n      <td>1156.208330</td>\n      <td>3.447100e+04</td>\n      <td>2.010000e+02</td>\n      <td>94.000000</td>\n      <td>102.000000</td>\n      <td>66.000000</td>\n      <td>98.032742</td>\n      <td>...</td>\n      <td>74.246891</td>\n      <td>16.797562</td>\n      <td>3.814239</td>\n      <td>3.378800e+04</td>\n      <td>98.169562</td>\n      <td>11.822313</td>\n      <td>15.270164</td>\n      <td>10.007610</td>\n      <td>10.869119</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>2059.000000</td>\n      <td>0.038000</td>\n      <td>7.565100e+04</td>\n      <td>2330.000000</td>\n      <td>7.296800e+04</td>\n      <td>1.291000e+03</td>\n      <td>288.000000</td>\n      <td>401.000000</td>\n      <td>345.000000</td>\n      <td>99.074935</td>\n      <td>...</td>\n      <td>77.195345</td>\n      <td>20.549893</td>\n      <td>4.949324</td>\n      <td>7.284000e+04</td>\n      <td>98.598636</td>\n      <td>15.133226</td>\n      <td>20.351878</td>\n      <td>13.182182</td>\n      <td>13.412162</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>3052.000000</td>\n      <td>0.110000</td>\n      <td>5.105067e+06</td>\n      <td>88018.396600</td>\n      <td>3.204947e+06</td>\n      <td>1.317147e+06</td>\n      <td>10289.000000</td>\n      <td>188565.000000</td>\n      <td>384119.000000</td>\n      <td>99.822821</td>\n      <td>...</td>\n      <td>88.898674</td>\n      <td>48.078510</td>\n      <td>20.791321</td>\n      <td>5.023523e+06</td>\n      <td>99.860384</td>\n      <td>48.691099</td>\n      <td>64.308477</td>\n      <td>43.312464</td>\n      <td>31.161972</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows × 25 columns</p>\n</div>\n```\n:::\n:::\n\n\n</br>\n\n###### Q2. `poptotal`(전체 인구) 변수를 `total`로, `popasian`(아시아 인구)변수를 `asian`으로 수정하세요.\n\n::: {#f76c73e5 .cell execution_count=7}\n``` {.python .cell-code}\n#poptotal -> total\nmidwest_new = midwest_new.rename(columns = {'poptotal' : 'total'})\n\n#popasian -> asian\nmidwest_new = midwest_new.rename(columns = {'popasian' : 'asian'})\n```\n:::\n\n\n</br>\n\n###### Q3. `total`, `asian` 변수를 이용해 '전체 인구 대비 아시아 인구 백분율' 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\n::: {#7de46e8e .cell execution_count=8}\n``` {.python .cell-code}\nmidwest_new['a_ratio'] = (midwest_new[\"asian\"] / midwest_new[\"total\"]) * 100\nmidwest_new['a_ratio'].plot.hist()\nimport matplotlib.pyplot as plt\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-9-output-1.png){width=593 height=411}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n</br>\n\n###### Q4. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 `'large'`, 그 외에는 `'small'`을 부여한 파생변수를 만들어 보세요.\n\n::: {#73813e42 .cell execution_count=9}\n``` {.python .cell-code}\nimport numpy as np\n#아시아 인구 백분율 전체 평균\nmidwest_new['a_mean'] = (midwest_new['a_ratio'].mean())\n\n#평균을 초과하는지 비교\nmidwest_new['vs_mean'] = np.where(midwest_new['a_ratio'] > midwest_new['a_mean'], 'large', 'small')\nmidwest_new\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PID</th>\n      <th>county</th>\n      <th>state</th>\n      <th>area</th>\n      <th>total</th>\n      <th>popdensity</th>\n      <th>popwhite</th>\n      <th>popblack</th>\n      <th>popamerindian</th>\n      <th>asian</th>\n      <th>...</th>\n      <th>percpovertyknown</th>\n      <th>percbelowpoverty</th>\n      <th>percchildbelowpovert</th>\n      <th>percadultpoverty</th>\n      <th>percelderlypoverty</th>\n      <th>inmetro</th>\n      <th>category</th>\n      <th>a_ratio</th>\n      <th>a_mean</th>\n      <th>vs_mean</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>561</td>\n      <td>ADAMS</td>\n      <td>IL</td>\n      <td>0.052</td>\n      <td>66090</td>\n      <td>1270.961540</td>\n      <td>63917</td>\n      <td>1702</td>\n      <td>98</td>\n      <td>249</td>\n      <td>...</td>\n      <td>96.274777</td>\n      <td>13.151443</td>\n      <td>18.011717</td>\n      <td>11.009776</td>\n      <td>12.443812</td>\n      <td>0</td>\n      <td>AAR</td>\n      <td>0.376759</td>\n      <td>0.487246</td>\n      <td>small</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>562</td>\n      <td>ALEXANDER</td>\n      <td>IL</td>\n      <td>0.014</td>\n      <td>10626</td>\n      <td>759.000000</td>\n      <td>7054</td>\n      <td>3496</td>\n      <td>19</td>\n      <td>48</td>\n      <td>...</td>\n      <td>99.087145</td>\n      <td>32.244278</td>\n      <td>45.826514</td>\n      <td>27.385647</td>\n      <td>25.228976</td>\n      <td>0</td>\n      <td>LHR</td>\n      <td>0.451722</td>\n      <td>0.487246</td>\n      <td>small</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>563</td>\n      <td>BOND</td>\n      <td>IL</td>\n      <td>0.022</td>\n      <td>14991</td>\n      <td>681.409091</td>\n      <td>14477</td>\n      <td>429</td>\n      <td>35</td>\n      <td>16</td>\n      <td>...</td>\n      <td>94.956974</td>\n      <td>12.068844</td>\n      <td>14.036061</td>\n      <td>10.852090</td>\n      <td>12.697410</td>\n      <td>0</td>\n      <td>AAR</td>\n      <td>0.106731</td>\n      <td>0.487246</td>\n      <td>small</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>564</td>\n      <td>BOONE</td>\n      <td>IL</td>\n      <td>0.017</td>\n      <td>30806</td>\n      <td>1812.117650</td>\n      <td>29344</td>\n      <td>127</td>\n      <td>46</td>\n      <td>150</td>\n      <td>...</td>\n      <td>98.477569</td>\n      <td>7.209019</td>\n      <td>11.179536</td>\n      <td>5.536013</td>\n      <td>6.217047</td>\n      <td>1</td>\n      <td>ALU</td>\n      <td>0.486918</td>\n      <td>0.487246</td>\n      <td>small</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>565</td>\n      <td>BROWN</td>\n      <td>IL</td>\n      <td>0.018</td>\n      <td>5836</td>\n      <td>324.222222</td>\n      <td>5264</td>\n      <td>547</td>\n      <td>14</td>\n      <td>5</td>\n      <td>...</td>\n      <td>82.505140</td>\n      <td>13.520249</td>\n      <td>13.022889</td>\n      <td>11.143211</td>\n      <td>19.200000</td>\n      <td>0</td>\n      <td>AAR</td>\n      <td>0.085675</td>\n      <td>0.487246</td>\n      <td>small</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>432</th>\n      <td>3048</td>\n      <td>WAUKESHA</td>\n      <td>WI</td>\n      <td>0.034</td>\n      <td>304715</td>\n      <td>8962.205880</td>\n      <td>298313</td>\n      <td>1096</td>\n      <td>672</td>\n      <td>2699</td>\n      <td>...</td>\n      <td>98.387674</td>\n      <td>3.121060</td>\n      <td>3.785820</td>\n      <td>2.590061</td>\n      <td>4.085479</td>\n      <td>1</td>\n      <td>HLU</td>\n      <td>0.885746</td>\n      <td>0.487246</td>\n      <td>large</td>\n    </tr>\n    <tr>\n      <th>433</th>\n      <td>3049</td>\n      <td>WAUPACA</td>\n      <td>WI</td>\n      <td>0.045</td>\n      <td>46104</td>\n      <td>1024.533330</td>\n      <td>45695</td>\n      <td>22</td>\n      <td>125</td>\n      <td>92</td>\n      <td>...</td>\n      <td>96.330036</td>\n      <td>8.488697</td>\n      <td>10.071411</td>\n      <td>6.953799</td>\n      <td>10.338641</td>\n      <td>0</td>\n      <td>AAR</td>\n      <td>0.199549</td>\n      <td>0.487246</td>\n      <td>small</td>\n    </tr>\n    <tr>\n      <th>434</th>\n      <td>3050</td>\n      <td>WAUSHARA</td>\n      <td>WI</td>\n      <td>0.037</td>\n      <td>19385</td>\n      <td>523.918919</td>\n      <td>19094</td>\n      <td>29</td>\n      <td>70</td>\n      <td>43</td>\n      <td>...</td>\n      <td>98.854785</td>\n      <td>13.786985</td>\n      <td>20.050708</td>\n      <td>11.695784</td>\n      <td>11.804558</td>\n      <td>0</td>\n      <td>AAR</td>\n      <td>0.221821</td>\n      <td>0.487246</td>\n      <td>small</td>\n    </tr>\n    <tr>\n      <th>435</th>\n      <td>3051</td>\n      <td>WINNEBAGO</td>\n      <td>WI</td>\n      <td>0.035</td>\n      <td>140320</td>\n      <td>4009.142860</td>\n      <td>136822</td>\n      <td>697</td>\n      <td>685</td>\n      <td>1728</td>\n      <td>...</td>\n      <td>95.460376</td>\n      <td>8.804031</td>\n      <td>10.592031</td>\n      <td>8.660587</td>\n      <td>6.661094</td>\n      <td>1</td>\n      <td>HAU</td>\n      <td>1.231471</td>\n      <td>0.487246</td>\n      <td>large</td>\n    </tr>\n    <tr>\n      <th>436</th>\n      <td>3052</td>\n      <td>WOOD</td>\n      <td>WI</td>\n      <td>0.048</td>\n      <td>73605</td>\n      <td>1533.437500</td>\n      <td>72157</td>\n      <td>90</td>\n      <td>481</td>\n      <td>722</td>\n      <td>...</td>\n      <td>98.750085</td>\n      <td>8.525831</td>\n      <td>11.162997</td>\n      <td>7.375656</td>\n      <td>7.882918</td>\n      <td>0</td>\n      <td>AAR</td>\n      <td>0.980912</td>\n      <td>0.487246</td>\n      <td>large</td>\n    </tr>\n  </tbody>\n</table>\n<p>437 rows × 31 columns</p>\n</div>\n```\n:::\n:::\n\n\n</br>\n\n###### Q5. `'large'`와 `'small'`에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\n::: {#58e4938a .cell execution_count=10}\n``` {.python .cell-code}\n#빈도 구하기\ncount_vs = midwest_new['vs_mean'].value_counts()\ncount_vs\n\n#막대 그래프 만들기\ncount_vs.plot.bar(rot = 0)\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-11-output-1.png){width=575 height=429}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}