---
title: "LS 빅데이터 스쿨 Homework 7"
author: "yongraegod"
date: "2024-09-02"
categories: [bigdata]
---

## ADP 교재 p.37~38 문제

## ADP 표본점수

- 2022년에 실시 된 ADP 실기 시험의 통계파트 표준점수는 평균이 30, 표준편차가 5인 정규분포를 따른다고 한다.

### 1) ADP 실기 시험의 통계파트 표준점수의 밀도함수를 그려보세요.

```{python}
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import norm

x = np.linspace(0, 60, 300)
y = norm.pdf(x, loc=30, scale=5)
plt.plot(x, y)
plt.grid(True)
plt.show()
```

### 2) ADP 수험생을 임의로 1명을 선택하여 통계 점수를 조회했을때 45점 보다 높은 점수를 받았을 확률을 구하세요.

```{python}
over_45 = 1 - norm.cdf(45, 30, 5)
print(f"45점 보다 높을 확률: ", round(over_45, 3))
```

### 3) 슬통이는 상위 10%에 해당하는 점수를 얻었다고 한다면, 슬통이의 점수는 얼마인지 계산해보세요.

```{python}
슬통_score = norm.ppf(0.9, loc=30, scale=5)
print(f"슬통이의 점수: ", round(슬통_score, 3))
```

### 4) 슬기로운 통계생활의 해당 회차 수강생은 16명이었다고 한다. 16명의 통계 파트 점수를 평균내었을 때, 이 평균값이 따르는 분포의 확률밀도 함수를 1번의 그래프와 겹쳐 그려보세요.

```{python}
# 1번 그래프
x = np.linspace(0, 60, 300)
y = norm.pdf(x, loc=30, scale=5)
plt.plot(x, y)

# 4번 그래프
y2 = norm.pdf(x, loc=30, scale=5/np.sqrt(16))
plt.plot(x, y2)

plt.show()
plt.clf()
```

### 5) 슬기로운 통계생활 ADP 반 수강생들의 통계점수를 평균내었다고 할 때, 이 값이 38점보다 높게 나올 확률을 구하세요.

```{python}
over_38 = 1 - norm.cdf(38, loc=30, scale=5/np.sqrt(16))
print(f"38점보다 높게 나올 확률: ", over_38)
```

## Covid 19 발병률

- Covid‑19의 발병률은 1%라고 한다. 다음은 이번 코로나 사태로 인하여 코로나 의심 환자들 1,085명을 대상으로 슬통 회사의 “다잡아” 키트를 사용하여 양성 반응을 체크한 결과이다.
![](covid19.png)

### 1) 다잡아 키트가 코로나 바이러스에 걸린 사람을 양성으로 잡아낼 확률을 계산하세요.

```{python}
mat_kit = np.array([370, 10, 15, 690]).reshape(2,2)
mat_kit
```

```{python}
print(round(370/(370 + 15),3))
```

### 2) 슬통 회사에서 다잡아 키트를 사용해 양성으로 나온 사람이 실제로는 코로나 바이러스에 걸려있을 확률을 97%라며, 키트의 우수성을 주장했다. 이 주장이 옳지 않은 이유를 서술하세요.

```{python}
print(f"실제로는 0.96의 확률이 나온다. 이는 0.97의 확률보다 낮기에 키트의 우수성을 주장하기는 바람직하지 않다.")
```

### 3) Covid‑19 발병률을 사용하여, 키트의 결과값이 양성으로 나온 사람이 실제로 코로나 바이러스에 걸려있을 확률을 구하세요.

```{python}
round((0.01 * (370 / 385) / (0.01 * (370 / 385) + (0.99 * (10 / 700)))), 3)
```

## 카이제곱분포와 표본분산

### 1) 자유도가 4인 카이제곱분포의 확률밀도함수를 그려보세요.
```{python}
from scipy.stats import chi2

k = np.linspace(0, 40, 500)
y = chi2.pdf(k, df=4)
plt.plot(k,y)
plt.show()
plt.clf()
```



### 2) 다음의 확률을 구해보세요. 𝑃(3 ≤ 𝑋 ≤ 5)
```{python}
print(f"확률은 : ", round((chi2.cdf(5, df=4) - chi2.cdf(3, df=4)), 3))
```

### 3) 자유도가 4인 카이제곱분포에서 크기가 1000인 표본을 뽑은 후, 히스토그램을 그려보세요.
```{python}
x = chi2.rvs(df=4, size=1000)
plt.hist(x)
plt.show()
plt.clf()
```


### 4) 자유도가 4인 카이제곱분포를 따르는 확률변수에서 나올 수 있는 값 중 상위 5%에 해당하는 값은 얼마인지 계산해보세요.
```{python}
chi2.ppf(0.95, df=4)
```

### 5) 3번에서 뽑힌 표본값들 중 상위 5%에 위치한 표본의 값은 얼마인가요?
```{python}
np.percentile(x, 95)
```

### 6) 평균이 3, 표준편차가 2인 정규분포를 따르는 확률변수에서 크기가 20인 표본, 𝑥1, ..., 𝑥20을 뽑은 후 표본분산을 계산한 것을 𝑠21이라 생각해보죠. 다음을 수행해보세요!

- 같은 방법으로 500개의 𝑠2 들, 𝑠21, 𝑠22, ..., 𝑠2 500 발생시킵니다.

- 발생한 500개의 𝑠2 들 각각에 4.75를 곱하고, 그것들의 히스토그램을 그려보세요. (히스토그램을 그릴 때 probability = TRUE 옵션을 사용해서 그릴 것)

- 위에서 그린 히스토그램에 자유도가 19인 카이제곱분포 확률밀도함수를 겹쳐그려보세요.

```{python}
n=20
var = []

for i in range(500):
    x = norm.rvs(loc=3, scale=2, size=n)
    var.append(np.var(x, ddof=1))

scaled_var = np.array(var) * 4.75

plt.hist(scaled_var, bins=50, density=True, color="blue")

k = np.linspace(0, max(scaled_var), 1000)
y = chi2.pdf(k, df=19)
plt.plot(k, y, color ="red")
```


